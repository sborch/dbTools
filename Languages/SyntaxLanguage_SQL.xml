<SyntaxLanguage Key="SQL" LanguageDefinitionVersion="4.0" Secure="True" WordContainsAdditionalCharacters="@_"
				SyntaxLanguageTypeName="SteveBorcherding.Editors.Languages.clsSyntaxLanguageDynamicSQL, sbEditorSQL"
				xmlns="http://ActiproSoftware/SyntaxEditor/4.0/LanguageDefinition">

    <!-- ==================================================================== -->
    <!-- Triggers -->
    <!-- ==================================================================== -->
    <Triggers>

        <KeyPressTrigger Key="MemberListTrigger" Character=".">
            <KeyPressTriggerValidStates>
                <KeyPressTriggerValidState State="DefaultState" />
            </KeyPressTriggerValidStates>
        </KeyPressTrigger>

    </Triggers>

    <!-- ==================================================================== -->
    <!-- Highlighting Styles -->
    <!-- ==================================================================== -->
    <Styles>
        <Style Key="ReservedWordStyle"          ForeColor="Blue"                />
        <Style Key="ImportExportKeyWordStyle"   ForeColor="SaddleBrown"                />
        <Style Key="StatementStartStyle"        ForeColor="Blue"    Bold="True" />
        <Style Key="NameStyle"                  ForeColor="Gray"                />
        <Style Key="StatementClauseStyle"       ForeColor="Blue"                />
        <Style Key="IdentifierAliasStyle"       ForeColor="Blue"                />
        <!-- <Style Key="FunctionStyle"              ForeColor="Magenta"             /> -->
        <Style Key="OperatorStyle"              ForeColor="Gray"                />
        <!-- <Style Key="DataTypeStyle"              ForeColor="Blue"                /> -->
        <Style Key="VariableStyle"              ForeColor="Teal"                />
        <Style Key="SystemVariableStyle"        ForeColor="Teal"                />
        <Style Key="NumberStyle"                ForeColor="Purple"              />
        <Style Key="StringDelimiterStyle"       ForeColor="Red"                 />
        <Style Key="StringDefaultStyle"         ForeColor="Red"                 />
        <Style Key="SquareStringDelimiterStyle" ForeColor="Black"               />
        <Style Key="SquareStringDefaultStyle"   ForeColor="Black"               />
        <Style Key="CommentDelimiterStyle"      ForeColor="Green"               />
        <Style Key="CommentDefaultStyle"        ForeColor="Green"               />
    </Styles>

    <!-- ==================================================================== -->
    <!-- States -->
    <!-- ==================================================================== -->
    <States>

        <!-- ================================================================== -->
        <!-- Default State -->
        <!-- ================================================================== -->
        <State Key="DefaultState">

            <!-- ================================================================ -->
            <!-- Default State Pattern Groups -->
            <!-- ================================================================ -->
            <PatternGroups>

                <!-- ============================================================== -->
                <!-- Whitespace -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="WhitespaceToken" PatternValue="{WhitespaceMacro}+" IsWhitespace="True" />

                <!-- ============================================================== -->
                <!-- Line Terminators -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="LineTerminatorToken" PatternValue="{LineTerminatorMacro}" IsWhitespace="True" />

                <!-- ============================================================== -->
                <!-- Brackets -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup Key="OpenParenthesisPatternGroup"  TokenKey="OpenParenthesisToken"  PatternValue="(" EndBracket  ="CloseParenthesisPatternGroup" />
                <ExplicitPatternGroup Key="CloseParenthesisPatternGroup" TokenKey="CloseParenthesisToken" PatternValue=")" StartBracket="OpenParenthesisPatternGroup" />

                <!-- ============================================================== -->
                <!-- Punctuation -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="PunctuationToken">
                    <ExplicitPatterns>
                        .
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Name -->
                <!-- ============================================================== -->
                <!--<ExplicitPatternGroup TokenKey="NameToken" Style="NameStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>
                        NAME:
                    </ExplicitPatterns>
                </ExplicitPatternGroup>-->

                <!--<RegexPatternGroup TokenKey="NameToken" Style="NameStyle" PatternValue="name: ({WhitespaceMacro}* ({WordMacro}*|{NonWordMacro}*))*" />-->

                <!-- ============================================================== -->
                <!-- Statement Start -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="StatementStartToken" Style="StatementStartStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>
                        ALTER ATTACH CREATE DATA_EXEC DATA_EXECUTE DESCRIBE DELETE DETACH DROP EXEC EXECUTE EXPLAIN EXPORT IMPORT INSERT PRAGMA SELECT TRANSFORM TRUNCATE UPDATE VACUUM WITH
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Statement End -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="StatementEndToken">
                    <ExplicitPatterns>
                        ;
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Statement Clause -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="StatementClauseToken" Style="StatementClauseStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>
                        BY FROM GROUP HAVING ORDER WHERE
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Import/Export Keywords -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="ImportExportKeyWordToken" Style="ImportExportKeyWordStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>
                      SRC_DATABASE
                      SRC_DATETIME_FORMAT
                      SRC_FILE
                      SRC_FILE_FIELD_LIST
                      SRC_FILE_FIELD_LOAD_LIST
                      SRC_FILE_FIELD_SEPARATOR
                      SRC_FILE_HEADER_ROWS
                      SRC_FILE_IGNORE_EMPTY_LINES
                      SRC_FILE_IGNORE_LINES_MATCHING
                      SRC_FILE_IGNORE_SSMS_SQL_BLOCK
                      SRC_FILE_NULL_FILL_MISSING_FIELDS
                      SRC_FILE_MAX_ROWS
                      SRC_FILE_NULL_TEXT
                      SRC_FILE_TEXT_QUALIFIER
                      SRC_FILE_TRIM_CHAR_VALUES
                      SRC_SERVER
                      SRC_TYPE
                      TGT_COMMIT_INTERVAL
                      TGT_DATETIME_FORMAT
                      TGT_EXISTS_ACTION
                      TGT_FILE
                      TGT_INCLUDE_FIELD_NAMES
                      TGT_FILE_FIELD_SEPARATOR
                      TGT_FILE_TEXT_QUALIFIER
                      TGT_LOAD_TYPE
                      TGT_TABLE
                      TGT_TRUNCATE
                      TGT_TYPE
                      TGT_UPDATE_KEY_FIELD_LIST
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                
                <!-- ============================================================== -->
                <!-- Identifier Alias -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="IdentifierAliasToken" Style="IdentifierAliasStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>
                        AS
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!--Reserved Words -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="ReservedKeyWordToken" Style="ReservedWordStyle" LookAhead="{NonWordMacro}|\z">
                    <ExplicitPatterns>

                        ALL AND ASC
                        BETWEEN
                        CASE
                        DEFAULT DESC DISTINCT
                        ELSE END EXCEPT
                        FULL
                        IN INNER INTERSECT
                        JOIN
                        LEFT LIKE
                        NOT NULL
                        ON OR OUTER
                        RIGHT
                        SET
                        TABLE TEST_DATA
                        THEN
                        UNION
                        WHEN

                        <!--
            ADD ALL ALTER AND ANY ASC ATTACH AUTHORIZATION
            BACKUP BEGIN BETWEEN BREAK BROWSE BULK
            CASCADE CASE CHECK CHECKPOINT CLOSE CLUSTERED COALESCE COLLATE COLUMN COMMIT COMPUTE CONSTRAINT
            CONTAINS CONTAINSTABLE CONTINUE CONVERT CREATE CROSS CURRENT CURRENT_DATE CURRENT_TIME
            CURRENT_TIMESTAMP CURRENT_USER CURSOR
            DATABASE DBCC DEALLOCATE DECLARE DEFAULT DELETE DENY DESC DESCRIBE DETACH DISK DISTINCT DISTRIBUTED DOUBLE DROP DUMP
            ELSE END ERRLVL ESCAPE EXCEPT EXEC EXPLAIN EXECUTE EXISTS EXIT EXTERNAL
            FETCH FILE FILLFACTOR FOR FOREIGN FREETEXT FREETEXTTABLE FULL FUNCTION
            GOTO GRANT
            HOLDLOCK
            IDENTITY IDENTITYCOL IDENTITY_INSERT IF IN INDEX INNER INSERT INTERSECT INTO IS
            JOIN
            KEY KILL
            LEFT LIKE LINENO LOAD
            MERGE
            NATIONAL NOCHECK NONCLUSTERED NOT NULL NULLIF
            OF OFF OFFSETS ON OPEN OPENDATASOURCE OPENQUERY OPENROWSET OPENXML OPTION OR OUTER OVER
            PERCENT PIVOT PLAN PRECISION PRIMARY PRINT PROC PROCEDURE PUBLIC
            RAISERROR READ READTEXT RECONFIGURE REFERENCES REPLICATION RESTORE RESTRICT RETURN REVERT REVOKE RIGHT
            ROLLBACK ROWCOUNT ROWGUIDCOL RULE SAVE
            SCHEMA SECURITYAUDIT SELECT SESSION_USER SET SETUSER SHUTDOWN SOME STATISTICS SYSTEM_USER
            TABLE TABLESAMPLE TEXTSIZE THEN TO TOP TRAN TRANSACTION TRANSFORM TRIGGER TSEQUAL
            UNION UNIQUE UNPIVOT UPDATE UPDATETEXT USE USER
            VACUUM VALUES VARYING VIEW
            WAITFOR WHEN WHILE WITH WRITETEXT
        -->
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Functions -->
                <!-- ============================================================== -->
                <!--
        <ExplicitPatternGroup TokenKey="AggregateFunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z">
          <ExplicitPatterns>
            AVG CHECKSUM_AGG COUNT COUNT_BIG GROUPING GROUPING_ID MAX MIN STDEV STDEVP SUM VAR VARP
          </ExplicitPatterns>
        </ExplicitPatternGroup>
        -->

                <!--
        <ExplicitPatternGroup TokenKey="ScalarConversionFunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z">
					<ExplicitPatterns>
            CAST CONVERT PARSE TRY_CAST TRY_CONVERT TRY_PARSE
          </ExplicitPatterns>
				</ExplicitPatternGroup>
        -->

                <!--
        <ExplicitPatternGroup TokenKey="ScalarDateTimeFunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z">
          <ExplicitPatterns>
            CURRENT_TIMESTAMP
            DATEADD DATEDIFF DATENAME DATEPART DAY
            GETDATE GETUTCDATE ISDATE MONTH
            SWITCHOFFSET SYSDATETIME SYSDATETIMEOFFSET SYSUTCDATETIME
            TODATETIMEOFFSET YEAR
          </ExplicitPatterns>
        </ExplicitPatternGroup>
        -->

                <!--
        <ExplicitPatternGroup TokenKey="ScalarMathFunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z">
          <ExplicitPatterns>
            ABS ACOS ASIN ATAN ATN2 CEILING COS COT DEGREES EXP FLOOR LOG LOG10 PI POWER RADIANS RAND ROUND SIGN SIN SQRT SQUARE TAN
          </ExplicitPatterns>
        </ExplicitPatternGroup>
        -->

                <!--
        <ExplicitPatternGroup TokenKey="ScalarStringFunctionToken" Style="FunctionStyle" LookAhead="{NonWordMacro}|\z">
          <ExplicitPatterns>
            ASCII CHAR CHARINDEX DIFFERENCE LEFT LEN LOWER LTRIM NCHAR PATINDEX QUOTENAME REPLACE REPLICATE REVERSE 
            RIGHT RTRIM SOUNDEX SPACE STR STUFF SUBSTRING UNICODE UPPER
          </ExplicitPatterns>
        </ExplicitPatternGroup>
        -->

                <!-- ============================================================== -->
                <!-- Operators -->
                <!-- ============================================================== -->
                <ExplicitPatternGroup TokenKey="OperatorToken" Style="OperatorStyle">
                    <ExplicitPatterns>
                        + - * / % &amp; | ^ ~ = &gt; &lt; &gt;= &lt;= &lt;&gt; != !&gt; !&lt;
                    </ExplicitPatterns>
                </ExplicitPatternGroup>

                <!-- ============================================================== -->
                <!-- Data Types -->
                <!-- ============================================================== -->
                <!--
        <ExplicitPatternGroup TokenKey="DataTypeToken" Style="DataTypeStyle" LookAhead="{NonWordMacro}|\z">
					<ExplicitPatterns>
						bigint binary bit char character datetime dec decimal double float int integer image long money national nchar ntext 
						number nvarchar precision raw real single smalldatetime smallint smallmoney text timestamp tinyint 
						uniqueidentifier varbinary varchar varchar2 varying 
					</ExplicitPatterns>
				</ExplicitPatternGroup>
        -->

                <!-- ============================================================== -->
                <!-- Identifier -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="IdentifierToken" PatternValue="{AlphaMacro}({WordMacro})*" />

                <!-- ============================================================== -->
                <!-- Variables -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="VariableToken" Style="VariableStyle" PatternValue="@ {WordMacro}+" LookAhead="{NonWordMacro}|\z" />

                <!-- ============================================================== -->
                <!-- System Variables -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="SystemVariableToken" Style="SystemVariableStyle" PatternValue="@@ {WordMacro}+" LookAhead="{NonWordMacro}|\z" />

                <!-- ============================================================== -->
                <!-- Numbers -->
                <!-- ============================================================== -->
                <RegexPatternGroup TokenKey="NumberToken"    Style="NumberStyle" PatternValue="{DigitMacro}+ (\. {DigitMacro}+)?" LookAhead="{NonWordMacro}|\z" />
                <RegexPatternGroup TokenKey="HexNumberToken" Style="NumberStyle" PatternValue="0 [x | X] {HexDigitMacro}+"        LookAhead="{NonWordMacro}|\z" />

            </PatternGroups>

            <!-- ================================================================ -->
            <!-- Default State Child States -->
            <!-- ================================================================ -->
            <ChildStates>
                <ChildState Key="StringState" />
                <ChildState Key="SquareStringState" />
                <ChildState Key="CommentState" />
                <ChildState Key="MultiLineCommentState" />
                <ChildState Key="NameState" />
            </ChildStates>

        </State>

        <!-- ================================================================== -->
        <!-- String State -->
        <!-- ================================================================== -->
        <State Key="StringState" TokenKey="StringDefaultToken" Style="StringDefaultStyle">

            <!-- ================================================================ -->
            <!-- String State Scopes -->
            <!-- ================================================================ -->
            <Scopes>
                <Scope>
                    <ExplicitPatternGroup Type="StartScope" TokenKey="StringStartToken" Style="StringDelimiterStyle" PatternValue="'" />
                    <ExplicitPatternGroup Type="EndScope"   TokenKey="StringEndToken"   Style="StringDelimiterStyle" PatternValue="'" />
                </Scope>
            </Scopes>

            <!-- ================================================================ -->
            <!-- String State Pattern Groups -->
            <!-- ================================================================ -->
            <PatternGroups>
                <RegexPatternGroup TokenKey="StringDefaultToken" PatternValue="[^']+" />
            </PatternGroups>

        </State>

        <!-- ================================================================== -->
        <!-- Square String State -->
        <!-- ================================================================== -->
        <State Key="SquareStringState" TokenKey="SquareStringDefaultToken" Style="StringDefaultStyle">

            <!-- ================================================================ -->
            <!-- Square String State Scopes -->
            <!-- ================================================================ -->
            <Scopes>
                <Scope>
                    <ExplicitPatternGroup Type="StartScope" TokenKey="SquareStringStartToken" Style="StringDelimiterStyle" PatternValue="[" />
                    <ExplicitPatternGroup Type="EndScope"   TokenKey="SquareStringEndToken"   Style="StringDelimiterStyle" PatternValue="]" />
                </Scope>
            </Scopes>

            <!-- ================================================================ -->
            <!-- Square String State Pattern Groups -->
            <!-- ================================================================ -->
            <PatternGroups>
                <RegexPatternGroup TokenKey="SquareStringDefaultToken" PatternValue="[^\]]+" />
            </PatternGroups>

        </State>

        <!-- ================================================================== -->
        <!-- Comment State -->
        <!-- ================================================================== -->
        <State Key="CommentState" TokenKey="CommentDefaultToken" Style="CommentDefaultStyle">

            <!-- ================================================================ -->
            <!-- Comment State Scopes -->
            <!-- ================================================================ -->
            <Scopes>
                <Scope>
                    <RegexPatternGroup Type="StartScope" TokenKey="RegionStartToken"      Style="CommentDelimiterStyle" PatternValue="-- {WhitespaceMacro}* Region" LookAhead="{NonWordMacro}|\z" />
                    <RegexPatternGroup Type="EndScope"   TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" />
                </Scope>
                <Scope>
                    <RegexPatternGroup Type="StartScope" TokenKey="RegionEndToken"        Style="CommentDelimiterStyle" PatternValue="-- {WhitespaceMacro}* End {WhitespaceMacro}? Region" LookAhead="{NonWordMacro}|\z" />
                    <RegexPatternGroup Type="EndScope"   TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" />
                </Scope>
                <Scope>
                    <ExplicitPatternGroup Type="StartScope" TokenKey="CommentStartToken"     Style="CommentDelimiterStyle" PatternValue="--" />
                    <RegexPatternGroup    Type="EndScope"   TokenKey="CommentStringEndToken" Style="CommentDelimiterStyle" PatternValue="{LineTerminatorMacro}" />
                </Scope>
            </Scopes>

            <!-- ============================================================== -->
            <!-- Comment State Pattern Groups -->
            <!-- ============================================================== -->
            <PatternGroups>
                <RegexPatternGroup TokenKey="CommentDefaultToken" PatternValue="{NonLineTerminatorMacro}+" />
            </PatternGroups>

        </State>

        <!-- ================================================================== -->
        <!-- Multi-Line Comment State -->
        <!-- ================================================================== -->
        <State Key="MultiLineCommentState" TokenKey="MultiLineCommentDefaultToken" Style="CommentDefaultStyle">

            <!-- ================================================================ -->
            <!-- Multi-Line Comment State Scopes -->
            <!-- ================================================================ -->
            <Scopes>

                <Scope BracketHighlight="True">
                    <ExplicitPatternGroup Type="StartScope" TokenKey="MultiLineCommentStartToken" Style="CommentDelimiterStyle" PatternValue="/*" />
                    <ExplicitPatternGroup Type="EndScope"   TokenKey="MultiLineCommentEndToken"   Style="CommentDelimiterStyle" PatternValue="*/" />
                </Scope>

            </Scopes>

            <!-- ================================================================ -->
            <!-- Multi-Line Comment Pattern Groups -->
            <!-- ================================================================ -->
            <PatternGroups>
                <RegexPatternGroup TokenKey="MultiLineCommentDefaultToken" PatternValue="[^\*]+" />
            </PatternGroups>

        </State>

        <!-- ================================================================== -->
        <!-- Name State -->
        <!-- ================================================================== -->
        <State Key="NameState" TokenKey="NameDefaultToken" Style="NameStyle">

            <!-- ================================================================ -->
            <!-- Name State Scopes -->
            <!-- ================================================================ -->
            <Scopes>
                <Scope>
                    <ExplicitPatternGroup Type="StartScope" TokenKey="NameStartToken" Style="NameStyle" PatternValue="name:" />
                    <RegexPatternGroup    Type="EndScope"   TokenKey="NameEndToken"   Style="NameStyle" PatternValue="{LineTerminatorMacro}" />
                </Scope>
            </Scopes>

            <!-- ============================================================== -->
            <!-- Name State Pattern Groups -->
            <!-- ============================================================== -->
            <PatternGroups>
                <RegexPatternGroup TokenKey="NameDefaultToken" PatternValue="{NonLineTerminatorMacro}+" />
            </PatternGroups>

        </State>


    </States>

</SyntaxLanguage>
